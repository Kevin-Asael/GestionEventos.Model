// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionEventos.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionEventos.Model.AsignarPonente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<int>("PonenteCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.HasIndex("PonenteCodigo");

                    b.ToTable("AsignarPonentes");
                });

            modelBuilder.Entity("GestionEventos.Model.Certificado", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<int>("InscripcionCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("InscripcionCodigo")
                        .IsUnique();

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("GestionEventos.Model.Evento", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("TipoCodigo");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("GestionEventos.Model.GestionarSesiones", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<string>("Hora")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.ToTable("GestionarSesiones");
                });

            modelBuilder.Entity("GestionEventos.Model.Inscripcion", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EventoCodigo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ParticipanteCodigo")
                        .HasColumnType("int");

                    b.HasKey("Codigo");

                    b.HasIndex("EventoCodigo");

                    b.HasIndex("ParticipanteCodigo");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("GestionEventos.Model.Pago", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<int>("InscripcionCodigo")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.HasIndex("InscripcionCodigo");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("GestionEventos.Model.Participante", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("GestionEventos.Model.Ponente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("GestionEventos.Model.Tipo", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Codigo");

                    b.ToTable("Tipos");
                });

            modelBuilder.Entity("GestionEventos.Model.AsignarPonente", b =>
                {
                    b.HasOne("GestionEventos.Model.Evento", "Evento")
                        .WithMany("Asignaciones")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventos.Model.Ponente", "Ponente")
                        .WithMany("Asignaciones")
                        .HasForeignKey("PonenteCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("GestionEventos.Model.Certificado", b =>
                {
                    b.HasOne("GestionEventos.Model.Inscripcion", "Inscripcion")
                        .WithOne("Certificado")
                        .HasForeignKey("GestionEventos.Model.Certificado", "InscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("GestionEventos.Model.Evento", b =>
                {
                    b.HasOne("GestionEventos.Model.Tipo", "Tipo")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("GestionEventos.Model.GestionarSesiones", b =>
                {
                    b.HasOne("GestionEventos.Model.Evento", "Evento")
                        .WithMany("Sesiones")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestionEventos.Model.Inscripcion", b =>
                {
                    b.HasOne("GestionEventos.Model.Evento", "Evento")
                        .WithMany("Inscripciones")
                        .HasForeignKey("EventoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventos.Model.Participante", "Participante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("ParticipanteCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GestionEventos.Model.Pago", b =>
                {
                    b.HasOne("GestionEventos.Model.Inscripcion", "Inscripcion")
                        .WithMany("Pagos")
                        .HasForeignKey("InscripcionCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("GestionEventos.Model.Evento", b =>
                {
                    b.Navigation("Asignaciones");

                    b.Navigation("Inscripciones");

                    b.Navigation("Sesiones");
                });

            modelBuilder.Entity("GestionEventos.Model.Inscripcion", b =>
                {
                    b.Navigation("Certificado");

                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("GestionEventos.Model.Participante", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("GestionEventos.Model.Ponente", b =>
                {
                    b.Navigation("Asignaciones");
                });

            modelBuilder.Entity("GestionEventos.Model.Tipo", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
